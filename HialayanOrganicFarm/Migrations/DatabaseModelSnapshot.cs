// <auto-generated />
using HimalayanOrganicFarm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HimalayanOrganicFarm.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("designations");
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("departmentId");

                    b.Property<int>("designationId");

                    b.HasKey("Id");

                    b.HasIndex("departmentId");

                    b.HasIndex("designationId");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Leave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<int>("employeeId");

                    b.Property<int>("from_date");

                    b.Property<string>("leave_type")
                        .IsRequired();

                    b.Property<int>("no_days");

                    b.Property<int>("to_date");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("leaves");
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("amount");

                    b.Property<int>("date");

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<int>("employeeId");

                    b.Property<int>("select_month");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.ToTable("salaries");
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<int>("no_post");

                    b.HasKey("Id");

                    b.ToTable("vacancies");
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Employee", b =>
                {
                    b.HasOne("HimalayanOrganicFarm.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HimalayanOrganicFarm.Models.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Leave", b =>
                {
                    b.HasOne("HimalayanOrganicFarm.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HimalayanOrganicFarm.Models.Salary", b =>
                {
                    b.HasOne("HimalayanOrganicFarm.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
